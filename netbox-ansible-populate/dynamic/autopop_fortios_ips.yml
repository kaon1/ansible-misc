---
- name: "Gather Fortios IPs and Auto-Populate Netbox"
  hosts: "{{ var_hosts }}"
  gather_facts: False
  vars:
    ansible_httpapi_use_ssl: yes
    ansible_httpapi_validate_certs: no
    ansible_httpapi_port: 443
    ansible_network_os: fortinet.fortios.fortios
  tasks:
    - fortinet.fortios.fortios_monitor_fact:
        vdom: "root"
        selector: 'system_available-interfaces'
      register: fortios_facts

    - name: "TASK 31: NETBOX >> Add interfaces to device"
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          device: "{{ inventory_hostname }}"
          name: "{{ item['name'] }}"
          mac_address: "{{ item['mac_address'] }}"
          type: other
        state: present
        validate_certs: no
      loop: "{{ fortios_facts['meta']['results'] }}"
      loop_control:
        label: "{{ item.name }}"
      when: 
        - item['status'] is defined
        - item['link'] is defined
        - item['status'] == "up"
        - item['link'] == "up"
        - item['ipv4_addresses'][0]['ip'] is defined
        - item['mac_address'] is defined
      delegate_to: localhost

    - name: "TASK 32: NETBOX >> ADD all IPs to IPAM and link to device"
      netbox.netbox.netbox_ip_address:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          address: "{{item['ipv4_addresses'][0]['ip'] }}/{{ item['ipv4_addresses'][0]['cidr_netmask'] }}"
          status: active
          assigned_object:
            name: "{{ item['name'] }}"
            device: "{{ inventory_hostname }}"
        state: present
        validate_certs: no
      loop: "{{ fortios_facts['meta']['results'] }}"
      loop_control:
        label: "{{ item.name }}"
      when: 
        - item['status'] is defined
        - item['link'] is defined
        - item['status'] == "up"
        - item['link'] == "up"
        - item['ipv4_addresses'][0]['ip'] is defined
        - item['mac_address'] is defined
      delegate_to: localhost
      register: ipam_output
      changed_when: False