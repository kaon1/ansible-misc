---
- name: "Gather Fortios IPs and Auto-Populate Netbox"
  hosts:
  gather_facts: False
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_httpapi_use_ssl: yes
    ansible_httpapi_validate_certs: no
    ansible_httpapi_port: 443
    ansible_network_os: fortinet.fortios.fortios
  tasks:
    - fortinet.fortios.fortios_monitor_fact:
        vdom: "root"
        params:
          scope: global
          include_vlan: Yes
          include_aggregate: Yes
        selector: 'system_interface'
      register: fortios_facts

    - name: "Add interfaces to device in NetBox"
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          device: "{{ inventory_hostname }}"
          name: "{{ item.value['name'] }}"
          description: "{{ item.value['alias'] }}"
          type: other
        state: present
        validate_certs: no
      loop: "{{ fortios_facts['meta']['results'] | dict2items }}"
      when: item.value['ip'] != "0.0.0.0"
      delegate_to: localhost

    - name: "ADD all IPs to IPAM and link to device"
      netbox.netbox.netbox_ip_address:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          family: 4
          address: "{{ item.value['ip'] }}/{{ item.value['mask'] }}"
          status: active
          assigned_object:
            name: "{{ item.value['name'] }}"
            device: "{{ inventory_hostname }}"
        state: present
        validate_certs: no
      loop: "{{ fortios_facts['meta']['results'] | dict2items }}"
      when: item.value['ip'] != "0.0.0.0"
      delegate_to: localhost
